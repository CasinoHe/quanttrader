// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: TickString.proto
// Protobuf C++ Version: 5.29.1

#include "TickString.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf {

inline constexpr TickString::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reqid_{0},
        ticktype_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TickString::TickString(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TickStringDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TickStringDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TickStringDefaultTypeInternal() {}
  union {
    TickString _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TickStringDefaultTypeInternal _TickString_default_instance_;
}  // namespace protobuf
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_TickString_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_TickString_2eproto = nullptr;
const ::uint32_t
    TableStruct_TickString_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::protobuf::TickString, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protobuf::TickString, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protobuf::TickString, _impl_.reqid_),
        PROTOBUF_FIELD_OFFSET(::protobuf::TickString, _impl_.ticktype_),
        PROTOBUF_FIELD_OFFSET(::protobuf::TickString, _impl_.value_),
        1,
        2,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::protobuf::TickString)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::protobuf::_TickString_default_instance_._instance,
};
const char descriptor_table_protodef_TickString_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020TickString.proto\022\010protobuf\"l\n\nTickStri"
    "ng\022\022\n\005reqId\030\001 \001(\005H\000\210\001\001\022\025\n\010tickType\030\002 \001(\005"
    "H\001\210\001\001\022\022\n\005value\030\003 \001(\tH\002\210\001\001B\010\n\006_reqIdB\013\n\t_"
    "tickTypeB\010\n\006_valueB:\n\026com.ib.client.prot"
    "obufB\017TickStringProto\252\002\016IBApi.protobufb\006"
    "proto3"
};
static ::absl::once_flag descriptor_table_TickString_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_TickString_2eproto = {
    false,
    false,
    206,
    descriptor_table_protodef_TickString_2eproto,
    "TickString.proto",
    &descriptor_table_TickString_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_TickString_2eproto::offsets,
    file_level_enum_descriptors_TickString_2eproto,
    file_level_service_descriptors_TickString_2eproto,
};
namespace protobuf {
// ===================================================================

class TickString::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TickString>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TickString, _impl_._has_bits_);
};

TickString::TickString(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.TickString)
}
inline PROTOBUF_NDEBUG_INLINE TickString::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protobuf::TickString& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        value_(arena, from.value_) {}

TickString::TickString(
    ::google::protobuf::Arena* arena,
    const TickString& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TickString* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, reqid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, reqid_),
           offsetof(Impl_, ticktype_) -
               offsetof(Impl_, reqid_) +
               sizeof(Impl_::ticktype_));

  // @@protoc_insertion_point(copy_constructor:protobuf.TickString)
}
inline PROTOBUF_NDEBUG_INLINE TickString::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        value_(arena) {}

inline void TickString::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, reqid_),
           0,
           offsetof(Impl_, ticktype_) -
               offsetof(Impl_, reqid_) +
               sizeof(Impl_::ticktype_));
}
TickString::~TickString() {
  // @@protoc_insertion_point(destructor:protobuf.TickString)
  SharedDtor(*this);
}
inline void TickString::SharedDtor(MessageLite& self) {
  TickString& this_ = static_cast<TickString&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TickString::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TickString(arena);
}
constexpr auto TickString::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TickString),
                                            alignof(TickString));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TickString::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TickString_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TickString::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TickString>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TickString::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TickString>(), &TickString::ByteSizeLong,
            &TickString::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TickString, _impl_._cached_size_),
        false,
    },
    &TickString::kDescriptorMethods,
    &descriptor_table_TickString_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TickString::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 33, 2> TickString::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TickString, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf::TickString>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 reqId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TickString, _impl_.reqid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TickString, _impl_.reqid_)}},
    // optional int32 tickType = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TickString, _impl_.ticktype_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TickString, _impl_.ticktype_)}},
    // optional string value = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(TickString, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 reqId = 1;
    {PROTOBUF_FIELD_OFFSET(TickString, _impl_.reqid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 tickType = 2;
    {PROTOBUF_FIELD_OFFSET(TickString, _impl_.ticktype_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string value = 3;
    {PROTOBUF_FIELD_OFFSET(TickString, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\0\0\5\0\0\0\0"
    "protobuf.TickString"
    "value"
  }},
};

PROTOBUF_NOINLINE void TickString::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.TickString)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.value_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.reqid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ticktype_) -
        reinterpret_cast<char*>(&_impl_.reqid_)) + sizeof(_impl_.ticktype_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TickString::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TickString& this_ = static_cast<const TickString&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TickString::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TickString& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:protobuf.TickString)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 reqId = 1;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_reqid(), target);
          }

          // optional int32 tickType = 2;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_ticktype(), target);
          }

          // optional string value = 3;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_value();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.TickString.value");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:protobuf.TickString)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TickString::ByteSizeLong(const MessageLite& base) {
          const TickString& this_ = static_cast<const TickString&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TickString::ByteSizeLong() const {
          const TickString& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:protobuf.TickString)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional string value = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value());
            }
            // optional int32 reqId = 1;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_reqid());
            }
            // optional int32 tickType = 2;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_ticktype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TickString::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TickString*>(&to_msg);
  auto& from = static_cast<const TickString&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.TickString)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_value(from._internal_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.reqid_ = from._impl_.reqid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.ticktype_ = from._impl_.ticktype_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TickString::CopyFrom(const TickString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.TickString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TickString::InternalSwap(TickString* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TickString, _impl_.ticktype_)
      + sizeof(TickString::_impl_.ticktype_)
      - PROTOBUF_FIELD_OFFSET(TickString, _impl_.reqid_)>(
          reinterpret_cast<char*>(&_impl_.reqid_),
          reinterpret_cast<char*>(&other->_impl_.reqid_));
}

::google::protobuf::Metadata TickString::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_TickString_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
