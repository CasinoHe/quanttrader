// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: TickSize.proto
// Protobuf C++ Version: 5.29.1

#ifndef TickSize_2eproto_2epb_2eh
#define TickSize_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_TickSize_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_TickSize_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_TickSize_2eproto;
namespace protobuf {
class TickSize;
struct TickSizeDefaultTypeInternal;
extern TickSizeDefaultTypeInternal _TickSize_default_instance_;
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf {

// ===================================================================


// -------------------------------------------------------------------

class TickSize final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf.TickSize) */ {
 public:
  inline TickSize() : TickSize(nullptr) {}
  ~TickSize() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TickSize* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TickSize));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TickSize(
      ::google::protobuf::internal::ConstantInitialized);

  inline TickSize(const TickSize& from) : TickSize(nullptr, from) {}
  inline TickSize(TickSize&& from) noexcept
      : TickSize(nullptr, std::move(from)) {}
  inline TickSize& operator=(const TickSize& from) {
    CopyFrom(from);
    return *this;
  }
  inline TickSize& operator=(TickSize&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TickSize& default_instance() {
    return *internal_default_instance();
  }
  static inline const TickSize* internal_default_instance() {
    return reinterpret_cast<const TickSize*>(
        &_TickSize_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TickSize& a, TickSize& b) { a.Swap(&b); }
  inline void Swap(TickSize* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TickSize* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TickSize* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TickSize>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TickSize& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TickSize& from) { TickSize::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TickSize* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protobuf.TickSize"; }

 protected:
  explicit TickSize(::google::protobuf::Arena* arena);
  TickSize(::google::protobuf::Arena* arena, const TickSize& from);
  TickSize(::google::protobuf::Arena* arena, TickSize&& from) noexcept
      : TickSize(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSizeFieldNumber = 3,
    kReqIdFieldNumber = 1,
    kTickTypeFieldNumber = 2,
  };
  // optional string size = 3;
  bool has_size() const;
  void clear_size() ;
  const std::string& size() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_size(Arg_&& arg, Args_... args);
  std::string* mutable_size();
  PROTOBUF_NODISCARD std::string* release_size();
  void set_allocated_size(std::string* value);

  private:
  const std::string& _internal_size() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_size(
      const std::string& value);
  std::string* _internal_mutable_size();

  public:
  // optional int32 reqId = 1;
  bool has_reqid() const;
  void clear_reqid() ;
  ::int32_t reqid() const;
  void set_reqid(::int32_t value);

  private:
  ::int32_t _internal_reqid() const;
  void _internal_set_reqid(::int32_t value);

  public:
  // optional int32 tickType = 2;
  bool has_ticktype() const;
  void clear_ticktype() ;
  ::int32_t ticktype() const;
  void set_ticktype(::int32_t value);

  private:
  ::int32_t _internal_ticktype() const;
  void _internal_set_ticktype(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf.TickSize)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      30, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TickSize& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr size_;
    ::int32_t reqid_;
    ::int32_t ticktype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TickSize_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TickSize

// optional int32 reqId = 1;
inline bool TickSize::has_reqid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TickSize::clear_reqid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reqid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TickSize::reqid() const {
  // @@protoc_insertion_point(field_get:protobuf.TickSize.reqId)
  return _internal_reqid();
}
inline void TickSize::set_reqid(::int32_t value) {
  _internal_set_reqid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:protobuf.TickSize.reqId)
}
inline ::int32_t TickSize::_internal_reqid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reqid_;
}
inline void TickSize::_internal_set_reqid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reqid_ = value;
}

// optional int32 tickType = 2;
inline bool TickSize::has_ticktype() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TickSize::clear_ticktype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ticktype_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TickSize::ticktype() const {
  // @@protoc_insertion_point(field_get:protobuf.TickSize.tickType)
  return _internal_ticktype();
}
inline void TickSize::set_ticktype(::int32_t value) {
  _internal_set_ticktype(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:protobuf.TickSize.tickType)
}
inline ::int32_t TickSize::_internal_ticktype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ticktype_;
}
inline void TickSize::_internal_set_ticktype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ticktype_ = value;
}

// optional string size = 3;
inline bool TickSize::has_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TickSize::clear_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TickSize::size() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.TickSize.size)
  return _internal_size();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TickSize::set_size(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.size_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.TickSize.size)
}
inline std::string* TickSize::mutable_size() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_size();
  // @@protoc_insertion_point(field_mutable:protobuf.TickSize.size)
  return _s;
}
inline const std::string& TickSize::_internal_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.size_.Get();
}
inline void TickSize::_internal_set_size(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.size_.Set(value, GetArena());
}
inline std::string* TickSize::_internal_mutable_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.size_.Mutable( GetArena());
}
inline std::string* TickSize::release_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.TickSize.size)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.size_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.size_.Set("", GetArena());
  }
  return released;
}
inline void TickSize::set_allocated_size(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.size_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.size_.IsDefault()) {
    _impl_.size_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.TickSize.size)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // TickSize_2eproto_2epb_2eh
